version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@7.0.0

jobs:
  # 构建java 程序
  maven-build:
    docker:
      - image: circleci/openjdk:stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }} # appends cache key with a hash of pom.xml file
            - v1-dependencies- # fallback in case previous cache key is not found
      - run: mvn install
      - save_cache:
            paths:
              - ~/.m2
            key: v1-dependencies-{{ checksum "pom.xml" }}
      - run: 
          name: maven build
          command: |
            chmod u+x mvnw
            ./mvnw clean package -DskipTests
      - run:
          name: save build
          command: |
           mkdir -p /tmp/workspace
           cp app/target/felo.minutes-app.jar /tmp/workspace/felo.minutes-app.jar
           cp CIDockerfile /tmp/workspace/CIDockerfile
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: /tmp/workspace
          # Must be relative path from root
          paths:
            - felo.minutes-app.jar
            - CIDockerfile
  # 构建image并推送
  build-and-push:
    machine:
      image: ubuntu-2004:202010-01
    parameters:
      docker-tag:
        type: string
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - aws-ecr/build-and-push-image:
          checkout: false
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: false
          dockerfile: CIDockerfile
          path: .
          region: AWS_REGION
          repo: minutes-backend
          tag: "<<parameters.docker-tag>>${CIRCLE_SHA1}"
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      # - add_ssh_keys:
      - run:
          name: docker start
          command: |
            CMD='cd /mnt/deploy && ./meet-minutes-deploy.sh '$AWS_ECR_ACCOUNT_URL'/minutes-backend:dev'${CIRCLE_SHA1}
            echo $CMD
            ssh ${USER_NAME}@${HOST_NAME} ${CMD}

workflows:
  build_and_push_image:
    jobs:
      - maven-build:
          filters:
            branches:
              only:
                - main
                - /^[0-9]*.wk[0-9]*$/
      - build-and-push:
          docker-tag: dev
          context:
            - ecr
          filters:
            branches:
              only:
                - main
          requires:
            - maven-build # only deploy once build job has completed
      - build-and-push:
          name: offical-build-and-push
          docker-tag: ""
          context:
            - ecr
          filters:
            branches:
              only:
                - /^[0-9]*.wk[0-9]*$/
          requires:
            - maven-build # only deploy once build job has completed
      - deploy:
          context:
            - ecr
          requires:
            - build-and-push # only deploy once build job has completed
          filters:
            branches:
              only: main