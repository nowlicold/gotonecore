<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>bench</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>bench-gen-dal</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author nowli                                                          -->
<!-- ============================================================================= -->

<mapper namespace="com.yuan.gotonecore.repository.mapper.MailUserConfigMapper">
	
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table gtc_mail_user_config -->
    <resultMap id="RM-MAIL-USER-CONFIG" type="com.yuan.gotonecore.repository.entity.MailUserConfigDO">
        <result property="id" column="id"  javaType="long"  jdbcType="DECIMAL"/>
        <result property="password" column="password"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="fromAddr" column="from_addr"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="mailServerId" column="mail_server_id"  javaType="long"  jdbcType="DECIMAL"/>
        <result property="fromName" column="from_name"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="gmtModified" column="gmt_modified"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="gmtCreate" column="gmt_create"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="userType" column="user_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="status" column="status"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="serversideEnabled" column="serverside_enabled"  javaType="boolean"  jdbcType="CHAR"/>
        <result property="serversideDisabledReason" column="serverside_disabled_reason"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
         id  ,
         password  ,
         from_addr  ,
         mail_server_id  ,
         from_name  ,
         gmt_modified  ,
         gmt_create  ,
         user_type  ,
         status  ,
         serverside_enabled  ,
         serverside_disabled_reason 
    </sql>




    <!-- ============================================= -->
    <!-- mapped statements for IbatisMailUserConfigDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisMailUserConfigDAO.modify -->
    <update id="modify">
    <![CDATA[
        update gtc_mail_user_config set password=#{password}, from_addr=#{fromAddr}, mail_server_id=#{mailServerId}, from_name=#{fromName}, user_type=#{userType}, status=#{status}, serverside_enabled=#{serversideEnabled}, serverside_disabled_reason=#{serversideDisabledReason}, gmt_modified=now() where (id = #{id})
    ]]>
    </update>

    <!-- mapped statement for IbatisMailUserConfigDAO.modifyStatus -->
    <update id="modifyStatus">
    <![CDATA[
        update gtc_mail_user_config set status=#{status}, gmt_modified=now() where (id = #{id})
    ]]>
    </update>

    <!-- mapped statement for IbatisMailUserConfigDAO.delete -->
    <delete id="delete">
    <![CDATA[
        delete from gtc_mail_user_config where (id = #{id})
    ]]>
    </delete>

    <!-- mapped statement for IbatisMailUserConfigDAO.selectCountByFromAddAndMailServerId -->
    <select id="selectCountByFromAddAndMailServerId" resultType="long">
    <![CDATA[
        select COUNT(*) from gtc_mail_user_config where ((mail_server_id = #{mailServerId}) AND (from_addr = #{fromAddr}) AND (status = 'ENABLED'))
    ]]>
    </select>
    <!-- mapped statement for IbatisMailUserConfigDAO.selectAll -->
    <select id="selectAll" resultMap="RM-MAIL-USER-CONFIG">
    <![CDATA[
        select id, password, from_addr, mail_server_id, from_name, user_type, status, serverside_enabled, serverside_disabled_reason, gmt_modified, from_userword, gmt_create from gtc_mail_user_config
    ]]>
    </select>
    <!-- mapped statement for IbatisMailUserConfigDAO.selectById -->
    <select id="selectById" resultMap="RM-MAIL-USER-CONFIG">
    <![CDATA[
        select id, password, from_addr, mail_server_id, from_name, user_type, status, serverside_enabled, serverside_disabled_reason, gmt_modified, from_userword, gmt_create from gtc_mail_user_config where (id = #{id})
    ]]>
    </select>
    <!-- mapped statement for IbatisMailUserConfigDAO.selectMaxGmtModified -->
    <select id="selectMaxGmtModified" resultType="java.util.Date">
    <![CDATA[
        select max(GMT_MODIFIED) from gtc_mail_user_config
    ]]>
    </select>
    <!-- mapped statement for IbatisMailUserConfigDAO.selectCount -->
    <select id="selectCount" resultType="long">
    <![CDATA[
        select COUNT(*) from gtc_mail_user_config
    ]]>
    </select>
    <!-- mapped statement for IbatisMailUserConfigDAO.search -->
    <!-- queryPage分页方法dba注意sqlreview -->
    <select id="search" resultMap="RM-MAIL-USER-CONFIG">
        select id, password, from_addr,			mail_server_id, from_name,user_type,status,serverside_enabled,serverside_disabled_reason,			gmt_modified,			gmt_create from gtc_mail_user_config			<where>				<if test="id == 0">					and id=#{id}                 </if>				<if test="fromAddr != null and fromAddr != ''">					and from_addr like '%' ||					#{fromAddr} || '%'                </if>				<if test="password != null and password != ''">					and password = #{password}                </if>				<if test="mailServerId == 0">					and mail_server_id =#{mailServerId}                </if>                <if test="fromName != null and fromName != ''">					and from_name like '%' ||					#{fromName} || '%'                </if>                <if test="status != null and status != ''">					and status =#{status}                </if>                 <if test="userType != null and userType != ''">					and user_type =#{userType}                </if>                 <if test="serversideEnabled != null">					and serverside_enabled =#{serversideEnabled}                </if>				<if test="beginModifiedDate != null and beginModifiedDate != ''">					<![CDATA[					and gmt_modified >= to_date(#{beginModifiedDate},'yyyy-mm-dd					HH24:mi:ss')					]]>                 </if>				<if test="endModifiedDate != null and endModifiedDate != ''">					<![CDATA[					and gmt_modified <= to_date(#{endModifiedDate},'yyyy-mm-dd HH24:mi:ss')					]]>                  </if>			</where>
    </select>
    <!-- mapped statement for IbatisMailUserConfigDAO.selectRandomByActivityIdAndDomainName -->
    <select id="selectRandomByActivityIdAndDomainName" resultMap="RM-MAIL-USER-CONFIG">
        select id, password, from_addr,			mail_server_id,			from_name,user_type,status,serverside_enabled,serverside_disabled_reason,			gmt_modified,from_userword,			gmt_create from gtc_mail_user_config where id = ( select			id from (select uc.id			from gtc_mail_user_config uc,gtc_mail_server_config sc			,gtc_activity_mail_user_link l			where uc.mail_server_id=sc.id and uc.id=l.mail_user_id and			l.activity_id=#{activityId} and sc.domain_name=#{serverDomainName} and l.enabled='1'			order by			RAND()) tmp limit 0,1)
    </select>
    <!-- mapped statement for IbatisMailUserConfigDAO.selectRandomByActivityId -->
    <select id="selectRandomByActivityId" resultMap="RM-MAIL-USER-CONFIG">
        select id,			password,			from_addr,			mail_server_id,			from_name,			user_type,			status,			serverside_enabled,			serverside_disabled_reason,			gmt_modified,			gmt_create,from_userword			from gtc_mail_user_config 			where id in (select mail_user_id			from (select mail_user_id			from gtc_activity_mail_user_link			where activity_id = #{activityId} and enabled='1'			order by RAND() limit 0,1) as t1)
    </select>
 

</mapper>