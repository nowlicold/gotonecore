/*
 * Bench Inc.
 * Copyright (c) 2004 All Rights Reserved.
 */
package com.yuan.gotonecore.repository.entity;

// auto generated imports
import java.util.Date;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.IdType;
import java.io.Serializable;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import lombok.EqualsAndHashCode;
import com.baomidou.mybatisplus.annotation.TableName;

/**
 * A data object class directly models database table <tt>gtc_sms_config</tt>.<br>
 * 短信配置
 * 
 *
 * This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>bench</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/gtc_sms_config.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>bench-gen-dal</tt> 
 * to generate this file.
 *
 * @author nowli
 */
@Data
@EqualsAndHashCode(callSuper = false)
@ApiModel(value="SmsConfigDO对象", description="短信配置")
@TableName("gtc_sms_config")
public class SmsConfigDO implements Serializable  {
    private static final long serialVersionUID = 741231858441822688L;

	public static final String TABLE_NAME = "GTC_SMS_CONFIG";
	//===========column onstants=====
	/**
	 * This constant corresponds to db column <tt>config_name</tt>.<br>
     */
	 public static final String COLUMN_CONFIG_NAME = "config_name";
	/**
	 * This constant corresponds to db column <tt>gmt_modified</tt>.<br>
     */
	 public static final String COLUMN_GMT_MODIFIED = "gmt_modified";
	/**
	 * This constant corresponds to db column <tt>gmt_create</tt>.<br>
     */
	 public static final String COLUMN_GMT_CREATE = "gmt_create";
	/**
	 * This constant corresponds to db column <tt>content</tt>.<br>
     */
	 public static final String COLUMN_CONTENT = "content";
	/**
	 * This constant corresponds to db column <tt>send_channels</tt>.<br>
     */
	 public static final String COLUMN_SEND_CHANNELS = "send_channels";
	/**
	 * This constant corresponds to db column <tt>interval_seconds</tt>.<br>
     */
	 public static final String COLUMN_INTERVAL_SECONDS = "interval_seconds";
	/**
	 * This constant corresponds to db column <tt>ack_code_timeout_seconds</tt>.<br>
     */
	 public static final String COLUMN_ACK_CODE_TIMEOUT_SECONDS = "ack_code_timeout_seconds";
	/**
	 * This constant corresponds to db column <tt>ack_code_max_validate</tt>.<br>
     */
	 public static final String COLUMN_ACK_CODE_MAX_VALIDATE = "ack_code_max_validate";
	/**
	 * This constant corresponds to db column <tt>id</tt>.<br>
     */
	 public static final String COLUMN_ID = "id";
	/**
	 * This constant corresponds to db column <tt>send_start_time</tt>.<br>
     */
	 public static final String COLUMN_SEND_START_TIME = "send_start_time";
	/**
	 * This constant corresponds to db column <tt>send_end_time</tt>.<br>
     */
	 public static final String COLUMN_SEND_END_TIME = "send_end_time";
	/**
	 * This constant corresponds to db column <tt>max_try_count</tt>.<br>
     */
	 public static final String COLUMN_MAX_TRY_COUNT = "max_try_count";
	/**
	 * This constant corresponds to db column <tt>retry_interval_seconds</tt>.<br>
     */
	 public static final String COLUMN_RETRY_INTERVAL_SECONDS = "retry_interval_seconds";
	/**
	 * This constant corresponds to db column <tt>sms_out_need_unique_id</tt>.<br>
     */
	 public static final String COLUMN_SMS_OUT_NEED_UNIQUE_ID = "sms_out_need_unique_id";
	
	//========== properties ==========

	/**
	 * This property corresponds to db column <tt>config_name</tt>.<br>
     * 模板配置名
     */
	 @TableId(type = IdType.NONE)
	private String configName;
	
	/**
	 * This property corresponds to db column <tt>gmt_modified</tt>.<br>
     * 
     */
	private Date gmtModified;
	
	/**
	 * This property corresponds to db column <tt>gmt_create</tt>.<br>
     * 
     */
	private Date gmtCreate;
	
	/**
	 * This property corresponds to db column <tt>content</tt>.<br>
     * 短信内容
     */
	private String content;
	
	/**
	 * This property corresponds to db column <tt>send_channels</tt>.<br>
     * 发送通道，多个逗号间隔，系统按权重，可用性等进行排序后，返回一个通道，如果不配置，则再全部通道中查找
     */
	private String sendChannels;
	
	/**
	 * This property corresponds to db column <tt>interval_seconds</tt>.<br>
     * 重复发送间隔时间，如果是5分钟，表明5分钟内只允许发送1次
     */
	private long intervalSeconds;
	
	/**
	 * This property corresponds to db column <tt>ack_code_timeout_seconds</tt>.<br>
     * 验证ACKCode的超时时间，小于等于0表示不限制
     */
	private long ackCodeTimeoutSeconds;
	
	/**
	 * This property corresponds to db column <tt>ack_code_max_validate</tt>.<br>
     * 验证码最多验证次数，小于等于0表示不限制
     */
	private int ackCodeMaxValidate;
	
	/**
	 * This property corresponds to db column <tt>id</tt>.<br>
     * 主键，PK
     */
	private long id;
	
	/**
	 * This property corresponds to db column <tt>send_start_time</tt>.<br>
     * 开始发送时间，24小时制，08:00:00
     */
	private String sendStartTime;
	
	/**
	 * This property corresponds to db column <tt>send_end_time</tt>.<br>
     * 截止发送时间，24小时制，22:00:00
     */
	private String sendEndTime;
	
	/**
	 * This property corresponds to db column <tt>max_try_count</tt>.<br>
     * 最大发送重试次数
     */
	private int maxTryCount;
	
	/**
	 * This property corresponds to db column <tt>retry_interval_seconds</tt>.<br>
     * 发送失败后，重试间隔秒数
     */
	private long retryIntervalSeconds;
	
	/**
	 * This property corresponds to db column <tt>sms_out_need_unique_id</tt>.<br>
     * 短信发送是否需要唯一id
     */
	private boolean smsOutNeedUniqueId;
	

    //========== getters and setters ==========

}
