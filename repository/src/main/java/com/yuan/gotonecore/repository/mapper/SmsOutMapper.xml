<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>bench</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>bench-gen-dal</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author nowli                                                          -->
<!-- ============================================================================= -->

<mapper namespace="com.yuan.gotonecore.repository.mapper.SmsOutMapper">
	
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table gtc_sms_out -->
    <resultMap id="RM-SMS-OUT" type="com.yuan.gotonecore.repository.entity.SmsOutDO">
        <result property="id" column="id"  javaType="long"  jdbcType="DECIMAL"/>
        <result property="receiver" column="receiver"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="userId" column="user_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="content" column="content"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="status" column="status"  javaType="java.lang.String"  jdbcType="CHAR"/>
        <result property="gmtResend" column="gmt_resend"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="sendTimes" column="send_times"  javaType="int"  jdbcType="DECIMAL"/>
        <result property="gmtModified" column="gmt_modified"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="gmtCreate" column="gmt_create"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="smsConfigId" column="sms_config_id"  javaType="long"  jdbcType="DECIMAL"/>
        <result property="properties" column="properties"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="bizId" column="biz_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="ackCode" column="ack_code"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="sendResult" column="send_result"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="sendChannel" column="send_channel"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="sendChannelSpecified" column="send_channel_specified"  javaType="boolean"  jdbcType="DECIMAL"/>
        <result property="resendFromId" column="resend_from_id"  javaType="long"  jdbcType="DECIMAL"/>
        <result property="smsId" column="sms_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="uniqueId" column="unique_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="templateArgs" column="template_args"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="appCode" column="app_code"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
         id  ,
         receiver  ,
         user_id  ,
         content  ,
         status  ,
         gmt_resend  ,
         send_times  ,
         gmt_modified  ,
         gmt_create  ,
         sms_config_id  ,
         properties  ,
         biz_id  ,
         ack_code  ,
         send_result  ,
         send_channel  ,
         send_channel_specified  ,
         resend_from_id  ,
         sms_id  ,
         unique_id  ,
         template_args  ,
         app_code 
    </sql>




    <!-- ============================================= -->
    <!-- mapped statements for IbatisSmsOutDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisSmsOutDAO.insertBatch -->
    <update id="insertBatch">
        insert all                <if test="doList != null and !doList.isEmpty()">							  and                    <foreach collection="doList" item="item">                        into gtc_sms_out						(id, receiver, user_id, content, status,gmt_resend,send_times, gmt_modified, gmt_create,sms_config_id,properties,biz_id,ack_code,send_result,send_channel,						send_channel_specified,resend_from_id,sms_id,unique_id,template_args,app_code)                        values                        (#doList[].id#,#doList[].receiver#,#doList[].userId#,#doList[].content#,'I',now()(),0,now()(),now()(),#doList[].smsConfigId#,#doList[].properties#,#doList[].bizId#,                        #doList[].ackCode#, null,#doList[].sendChannel#,#doList[].sendChannelSpecified#,0,#doList[].smsId#,#doList[].uniqueId#,#doList[].templateArgs#,#doList[].appCode#)                    </foreach>                    select max(id) from gtc_sms_out                </if>
    </update>

    <!-- mapped statement for IbatisSmsOutDAO.selectById -->
    <select id="selectById" resultMap="RM-SMS-OUT">
    <![CDATA[
        select id, receiver, user_id, content, status, gmt_resend, send_times, gmt_modified, gmt_create, sms_config_id, properties, biz_id, ack_code, send_result, send_channel, send_channel_specified, resend_from_id, sms_id, unique_id, template_args, app_code from gtc_sms_out where (id = #{id})
    ]]>
    </select>
    <!-- mapped statement for IbatisSmsOutDAO.selectBySmsId -->
    <select id="selectBySmsId" resultMap="RM-SMS-OUT">
    <![CDATA[
        select id, receiver, user_id, content, status, gmt_resend, send_times, gmt_modified, gmt_create, sms_config_id, properties, biz_id, ack_code, send_result, send_channel, send_channel_specified, resend_from_id, sms_id, unique_id, template_args, app_code from gtc_sms_out where (sms_id = #{smsId})
    ]]>
    </select>
    <!-- mapped statement for IbatisSmsOutDAO.selectCountBySmsId -->
    <select id="selectCountBySmsId" resultType="long">
    <![CDATA[
        select COUNT(*) from gtc_sms_out where (sms_id = #{smsId})
    ]]>
    </select>
    <!-- mapped statement for IbatisSmsOutDAO.selectByIds -->
    <select id="selectByIds" resultMap="RM-SMS-OUT">
        select id, receiver, user_id, content, status,			gmt_resend,			send_times, gmt_modified, gmt_create,			sms_config_id,			properties,			biz_id, ack_code,send_result,send_channel,send_channel_specified,resend_from_id,sms_id,unique_id,template_args,app_code from gtc_sms_out where id in 			<foreach open="(" close=")" separator="," collection="ids" item="item">			 		#{item}			</foreach>
    </select>
    <!-- mapped statement for IbatisSmsOutDAO.selectByIdForUpdate -->
    <select id="selectByIdForUpdate" resultMap="RM-SMS-OUT">
    <![CDATA[
        select id, receiver, user_id, content, status, gmt_resend, send_times, gmt_modified, gmt_create, sms_config_id, properties, biz_id, ack_code, send_result, send_channel, send_channel_specified, resend_from_id, sms_id, unique_id, template_args, app_code from gtc_sms_out where (id = #{id}) for update 
    ]]>
    </select>
    <!-- mapped statement for IbatisSmsOutDAO.selectReadyToSendIds -->
    <select id="selectReadyToSendIds" resultType="long">
        <![CDATA[			select * from (select id from gtc_sms_out where  (gmt_resend is null or gmt_resend <=now() ) and			(status='I' or status='R') order by			gmt_resend asc)	t		limit 0,#{recordCount}			 ]]>
    </select>
    <!-- mapped statement for IbatisSmsOutDAO.search -->
    <!-- queryPage分页方法dba注意sqlreview -->
    <select id="search" resultMap="RM-SMS-OUT">
        <![CDATA[					select id, receiver, user_id, content, status, gmt_resend, send_times,					gmt_modified, gmt_create, sms_config_id, properties, biz_id, ack_code,send_result,send_channel,send_channel_specified,resend_from_id,sms_id,unique_id,template_args,app_code 					from gtc_sms_out				]]>				 <where>				 	<if test="receiver != null and receiver != ''">	     			    <![CDATA[							 and receiver=#{receiver}	                    ]]>                    </if>                    <if test="userId != null and userId != ''">	     			    <![CDATA[							 and user_id=#{userId}	                    ]]>                    </if>                    <if test="status != null and status != ''">	     			    <![CDATA[							 and status=#{status}	                    ]]>                    </if>				 </where>				 <![CDATA[				 	order by id desc				 ]]>
    </select>
    <!-- mapped statement for IbatisSmsOutDAO.selectByBizIdSmsConfigIdWithIntervalSeconds -->
    <select id="selectByBizIdSmsConfigIdWithIntervalSeconds" resultMap="RM-SMS-OUT">
        <![CDATA[			 select * from (			select id, receiver, user_id, content, status,			gmt_resend,			send_times, gmt_modified, gmt_create,			sms_config_id,			properties,			biz_id, ack_code,send_result,send_channel,send_channel_specified,resend_from_id,sms_id,unique_id,template_args,app_code from gtc_sms_out o where biz_id=#{bizId} and sms_config_id=#{smsConfigId}			      and			      gmt_create >=now() - (select INTERVAL_SECONDS from			      gtc_sms_config where id=o.sms_config_id)/86400  order by gmt_create desc) tmp limit 0,1			 ]]>
    </select>
    <!-- mapped statement for IbatisSmsOutDAO.updateSendFaild -->
    <update id="updateSendFaild">
        update gtc_sms_out set			gmt_resend=#{gmtResend},gmt_modified=now(),status='R',			send_times=send_times+1,send_result=#{sendResult},send_channel=#{sendChannel}			where			id=#{id}
    </update>

    <!-- mapped statement for IbatisSmsOutDAO.updatePrepared -->
    <update id="updatePrepared">
    <![CDATA[
        update gtc_sms_out set gmt_modified=now(), status='P', send_channel=#{sendChannel} where (id = #{id})
    ]]>
    </update>

    <!-- mapped statement for IbatisSmsOutDAO.updateSendOverTryCount -->
    <update id="updateSendOverTryCount">
        update gtc_sms_out set gmt_modified=now(),status='O',			send_times=send_times+1,send_channel=#{sendChannel} where			id=#{id}
    </update>

    <!-- mapped statement for IbatisSmsOutDAO.deleteById -->
    <delete id="deleteById">
    <![CDATA[
        delete from gtc_sms_out where (id = #{id})
    ]]>
    </delete>

 

</mapper>