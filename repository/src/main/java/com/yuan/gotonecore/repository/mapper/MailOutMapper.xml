<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>bench</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>bench-gen-dal</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author nowli                                                          -->
<!-- ============================================================================= -->

<mapper namespace="com.yuan.gotonecore.repository.mapper.MailOutMapper">
	
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->



    <sql id="Base_Column_List">
         id  ,
         receiver  ,
         user_id  ,
         status  ,
         gmt_schedule  ,
         gmt_resend  ,
         send_times  ,
         gmt_modified  ,
         gmt_create  ,
         mail_cc  ,
         mail_bcc  ,
         mail_replay_to  ,
         mail_subject  ,
         mail_from  ,
         properties  ,
         channel  ,
         send_client_id  ,
         mail_config_id  ,
         activity_id  ,
         template_args  ,
         mail_body_pattern 
    </sql>




    <!-- ============================================= -->
    <!-- mapped statements for IbatisMailOutDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisMailOutDAO.selectReadyToSendIds -->
    <select id="selectReadyToSendIds" resultType="java.lang.Integer">
        <![CDATA[			   select * from (				select id				  from gtc_mail_out				 where   channel=#{channel} and status in ('R','P','I') and (gmt_resend is null or gmt_resend <=now() ) order by gmt_resend asc				   ) t limit 0,#{recordCount}			]]>
    </select>
    <!-- mapped statement for IbatisMailOutDAO.findAssianableMailIdByChannelForUpdate -->
    <select id="findAssianableMailIdByChannelForUpdate" resultType="long">
        <![CDATA[				select id				  from gtc_mail_out				 where   channel=#{channel} and status='I'				    limit 0,1000 for update			]]>
    </select>
    <!-- mapped statement for IbatisMailOutDAO.findAssignedMailIdsBySendClientId -->
    <select id="findAssignedMailIdsBySendClientId" resultType="java.util.HashMap">
        <![CDATA[				select 					id,mail_config_id,receiver				from gtc_mail_out where send_client_id=#{sendClientId} and status='P'				   limit 0,100			]]>
    </select>
    <!-- mapped statement for IbatisMailOutDAO.updateStatusByMailIds -->
    <update id="updateStatusByMailIds">
        update gtc_mail_out set status=#{status},gmt_modified=now() where id in 				<foreach open="(" close=")" separator="," collection="mailIdList" item="item">			 				#{item}			    </foreach>
    </update>

    <!-- mapped statement for IbatisMailOutDAO.updateAssignInfoByIds -->
    <update id="updateAssignInfoByIds">
        update gtc_mail_out set SEND_CLIENT_ID=#{sendClientId},gmt_modified=now(),status=#{status},gmt_resend=now() where id in				<foreach open="(" close=")" separator="," collection="mailIdList" item="item">			 				#{item}			    </foreach>
    </update>

    <!-- mapped statement for IbatisMailOutDAO.unassignMailBySendClientTimeout -->
    <update id="unassignMailBySendClientTimeout">
        <![CDATA[				update gtc_mail_out set status='I',send_client_id=0 where send_client_id in					(select id from gtc_mail_send_client where status='DEAD' and				gmt_modified >= now()-2)			 ]]>
    </update>

    <!-- mapped statement for IbatisMailOutDAO.findMailMsgByIdForUpdate -->
    <select id="findMailMsgByIdForUpdate" resultType="com.yuan.gotonecore.repository.entity.MailOutDO">
        <![CDATA[			select id,				receiver,				user_id				,template_args,				status,				gmt_schedule,				gmt_resend,				gmt_modified,				gmt_create,				send_times,				MAIL_CONFIG_ID, 				MAIL_CC,				MAIL_BCC,				MAIL_REPLAY_TO,				MAIL_SUBJECT,				MAIL_FROM,properties,channel,SEND_CLIENT_ID ,activity_id,MAIL_BODY_PATTERN			from gtc_mail_out			where (id = #{id}) for update			]]>
    </select>
    <!-- mapped statement for IbatisMailOutDAO.findMailMsgById -->
    <select id="findMailMsgById" resultType="com.yuan.gotonecore.repository.entity.MailOutDO">
    <![CDATA[
        select id, receiver, user_id, status, gmt_schedule, gmt_resend, gmt_modified, gmt_create, send_times, MAIL_CONFIG_ID, template_args, MAIL_CC, MAIL_BCC, MAIL_REPLAY_TO, MAIL_SUBJECT, MAIL_FROM, properties, channel, SEND_CLIENT_ID, activity_id, MAIL_BODY_PATTERN from gtc_mail_out where (id = #{id})
    ]]>
    </select>
    <!-- mapped statement for IbatisMailOutDAO.updateSendFailed -->
    <update id="updateSendFailed">
    <![CDATA[
        update gtc_mail_out set status=#{status}, send_times=#{sendTimes}, gmt_modified=now(), gmt_resend=#{gmtResend} where (id = #{id})
    ]]>
    </update>

    <!-- mapped statement for IbatisMailOutDAO.deleteMailMsgById -->
    <delete id="deleteMailMsgById">
    <![CDATA[
        delete from gtc_mail_out where (id = #{id})
    ]]>
    </delete>

    <!-- mapped statement for IbatisMailOutDAO.selectSendClientIdById -->
    <select id="selectSendClientIdById" resultType="long">
    <![CDATA[
        select send_client_id from gtc_mail_out where (id = #{id})
    ]]>
    </select>
 

</mapper>